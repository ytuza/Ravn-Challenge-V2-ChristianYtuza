[{"Z:\\Proyects\\sw_ravn\\starwars\\src\\index.js":"1","Z:\\Proyects\\sw_ravn\\starwars\\src\\App.js":"2","Z:\\Proyects\\sw_ravn\\starwars\\src\\reportWebVitals.js":"3","Z:\\Proyects\\sw_ravn\\starwars\\src\\components\\People.js":"4","Z:\\Proyects\\sw_ravn\\starwars\\src\\components\\Person.js":"5","Z:\\Proyects\\sw_ravn\\starwars\\src\\iconos\\index.js":"6","Z:\\Proyects\\sw_ravn\\starwars\\src\\components\\Properties.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":556,"mtime":1611578815606,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2355,"mtime":1611588150472,"results":"12","hashOfConfig":"9"},{"size":1528,"mtime":1611588657779,"results":"13","hashOfConfig":"9"},{"size":199,"mtime":1611568260792,"results":"14","hashOfConfig":"9"},{"size":1509,"mtime":1611588993678,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"9jonlp",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"Z:\\Proyects\\sw_ravn\\starwars\\src\\index.js",[],["34","35"],"Z:\\Proyects\\sw_ravn\\starwars\\src\\App.js",[],"Z:\\Proyects\\sw_ravn\\starwars\\src\\reportWebVitals.js",[],"Z:\\Proyects\\sw_ravn\\starwars\\src\\components\\People.js",["36","37"],"import './people.css';\r\nimport {useState} from 'react';\r\nimport React, {Component} from 'react'\r\n\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport {Person} from \"./Person\";\r\nimport {filter} from \"graphql-anywhere\";\r\nimport {Waypoint} from 'react-waypoint';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Properties from './Properties.js'\r\n\r\nconst PEOPLE_QUERY = gql`\r\n  query peopleQuery( $after : String){\r\n    allPeople(first: 5 after: $after){\r\n      totalCount\r\n      ...PersonFragment\r\n      pageInfo{\r\n        endCursor\r\n        hasNextPage\r\n      }\r\n    }\r\n  }\r\n  ${Person.fragments.PeopleConnection}\r\n\r\n`;\r\n\r\n\r\nfunction People() {\r\n\r\n  const [props, setMyProps] = useState(false);\r\n\r\n  const { loading, error, data, fetchMore } = useQuery(PEOPLE_QUERY, {\r\n    variables: { after: null }\r\n  });\r\n\r\n  const [nodeT, setnode] = useState(null);\r\n\r\n\r\n\r\n  function prop(Character){\r\n    setMyProps(true);\r\n    setnode(Character.node);\r\n\r\n  }\r\n\r\n  if (loading) return <div className = \"Loading\">\r\n    <FontAwesomeIcon icon= \"spinner\" spin = {true}/> <div className = \"loadtext\">Loading</div>\r\n  </div>;\r\n  if (error){\r\n    console.log(error);\r\n    return <div className = \"failed\">Failed to Load Data</div>;\r\n  }\r\n  //console.log(data);\r\n  return (\r\n    <div className = \"bottonbar\">\r\n    <div className = \"listPeople\">\r\n      <Person func = {prop} allPeople = {filter(Person.fragments.PeopleConnection, data.allPeople)}/>\r\n      <Waypoint bottomOffset  = \"5%\" onEnter={()=>{\r\n        console.log(\"paltas2\");\r\n        if(data.allPeople.pageInfo.hasNextPage){\r\n          const {endCursor} = data.allPeople.pageInfo;\r\n          fetchMore({\r\n            variables: {after: endCursor},\r\n            updateQuery:(prevResult, {fetchMoreResult}) => {\r\n              fetchMoreResult.allPeople.edges = [...prevResult.allPeople.edges,\r\n              ...fetchMoreResult.allPeople.edges];\r\n              return fetchMoreResult;\r\n            }\r\n\r\n          })\r\n        }else{\r\n          console.log(\"Ya no hay mas\");\r\n        }\r\n\r\n      }}>\r\n        <div className = \"Loading\">\r\n\r\n           <FontAwesomeIcon className = \"mx-3\" icon= \"spinner\" spin = {true}/><div className = \"loadtext\">Loading</div>\r\n        </div>\r\n      </Waypoint>\r\n\r\n    </div>\r\n    <Properties  node = {nodeT}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default People;\r\n","Z:\\Proyects\\sw_ravn\\starwars\\src\\components\\Person.js",["38","39"],"import React , {useState} from 'react';\r\n\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './person.css';\r\n\r\n\r\n\r\nconst PERSON_FRAGMENT = gql`\r\n  fragment PersonFragment on PeopleConnection {\r\n    edges{\r\n      node{\r\n        id\r\n        name\r\n        eyeColor\r\n        hairColor\r\n        skinColor\r\n        birthYear\r\n\r\n        vehicleConnection{\r\n          edges{\r\n            node{\r\n              id\r\n              name\r\n            }\r\n          }\r\n        }\r\n\r\n        species {\r\n          name\r\n        }\r\n        homeworld {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nfunction Specie({Person}){\r\n  const isHuman = Person.node.species;\r\n\r\n  if(!isHuman){\r\n    return(<div className = \"specie\" >Human from {Person.node.homeworld.name} </div>)\r\n  }else{\r\n    return(<div className = \"specie\">{Person.node.species.name} from {Person.node.homeworld.name}</div>)\r\n  }\r\n}\r\n\r\n\r\nfunction Person({func, allPeople}){\r\n\r\n  return (\r\n    <div >\r\n       {allPeople.edges.map(Person => (\r\n         <div className = \"person\" key = {Person.node.id}  >\r\n            <div className = \"name\">{Person.node.name}</div>\r\n            <Specie Person = {Person}/>\r\n            <FontAwesomeIcon icon=\"chevron-right\" className= \"arrow button\" onClick={()=>{\r\n              func(Person);\r\n            }\r\n            }/>\r\n\r\n         </div>\r\n\r\n       ))}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nPerson.fragments = {\r\n  PeopleConnection: PERSON_FRAGMENT\r\n};\r\n\r\nexport {Person};\r\n","Z:\\Proyects\\sw_ravn\\starwars\\src\\iconos\\index.js",[],"Z:\\Proyects\\sw_ravn\\starwars\\src\\components\\Properties.js",["40"],"import React , {useState} from 'react';\r\nimport './people.css';\r\n\r\nfunction capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nfunction Properties({node}){\r\n\r\n  if(node != null){\r\n  return(\r\n    <div className = \"properties \">\r\n\r\n      <div className = \"tituloPro\">General Information</div>\r\n      <div className = \"character\">\r\n        <div className = \"datapro\"> Eye Color </div>\r\n\r\n        <div className = \"dataproV\">{capitalizeFirstLetter(node.eyeColor)}</div>\r\n      </div>\r\n      <div className = \"character\">\r\n        <div className = \"datapro\"> Hair Color </div>\r\n        <div className = \"dataproV\"> {capitalizeFirstLetter(node.hairColor)} </div>\r\n      </div>\r\n      <div className = \"character\">\r\n        <div className = \"datapro\"> Skin Color </div>\r\n        <div className = \"dataproV\"> {capitalizeFirstLetter(node.skinColor)} </div>\r\n      </div>\r\n\r\n      <div className = \"character\">\r\n        <div className = \"datapro\"> Birth Year </div>\r\n        <div className = \"dataproV\"> {capitalizeFirstLetter(node.birthYear)} </div>\r\n      </div>\r\n\r\n      <div className = \"tituloPro\" > Vehicles </div>\r\n\r\n      <div >\r\n         {node.vehicleConnection.edges.map(Vehicle => (\r\n\r\n           <div className = \"character2 \" key = {Vehicle.node.id}  >\r\n              <div className = \"datapro\">{Vehicle.node.name}</div>\r\n\r\n           </div>\r\n\r\n\r\n         ))}\r\n\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n  )}else{return(<div></div>)}\r\n}\r\n\r\nexport default Properties;\r\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":3,"column":16,"nodeType":"47","messageId":"48","endLine":3,"endColumn":25},{"ruleId":"45","severity":1,"message":"49","line":30,"column":10,"nodeType":"47","messageId":"48","endLine":30,"endColumn":15},{"ruleId":"45","severity":1,"message":"50","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},{"ruleId":"45","severity":1,"message":"51","line":3,"column":10,"nodeType":"47","messageId":"48","endLine":3,"endColumn":18},{"ruleId":"45","severity":1,"message":"50","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'props' is assigned a value but never used.","'useState' is defined but never used.","'useQuery' is defined but never used.","no-global-assign","no-unsafe-negation"]